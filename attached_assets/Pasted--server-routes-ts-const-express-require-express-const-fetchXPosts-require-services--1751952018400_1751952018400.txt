// server/routes.ts
const express = require("express");
const { fetchXPosts } = require("./services/xSearch");
const { generateHeadlines } = require("./services/headlineCreator");
const { fetchSupportingArticles } = require("./services/supportCompiler");
const { completeSearch } = require("./services/completeSearch");

function registerRoutes(app) {
  const router = express.Router();

  // Store headlines in memory (replace with database in production)
  let headlinesStore = [];

  router.post("/api/generate-headlines", async (req, res) => {
    const { topics } = req.body;
    if (!topics || topics.length < 5) {
      return res.status(400).json({ message: "At least 5 topics required" });
    }

    try {
      const posts = await fetchXPosts(topics);
      const headlinesByTopic = await generateHeadlines(posts);
      const articlesByTopic = await fetchSupportingArticles(headlinesByTopic);

      let headlines = [];
      for (const topic in headlinesByTopic) {
        headlinesByTopic[topic].forEach((headline, index) => {
          const articles = articlesByTopic[topic]?.find((a) => a.headline === headline.title)?.articles || [];
          headlines.push({
            id: `${topic}-${index}`,
            title: headline.title,
            summary: headline.summary,
            category: topic,
            createdAt: new Date().toISOString(),
            engagement: posts[topic].reduce((sum, p) => sum + p.likes, 0),
            sourcePosts: posts[topic],
            supportingArticles: articles,
          });
        });
      }

      headlines = await completeSearch(topics, headlines);
      headlinesStore = headlines;
      res.json({ success: true, headlines });
    } catch (error) {
      console.error("Error in /api/generate-headlines:", error.message);
      res.status(500).json({ message: "Failed to generate headlines" });
    }
  });

  router.get("/api/headlines", (req, res) => {
    res.json({ headlines: headlinesStore });
  });

  app.use(router);
  return app.listen();
}

module.exports = { registerRoutes };